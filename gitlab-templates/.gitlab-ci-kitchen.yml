##  Package Build  ##
.humandone:kitchen:build:package:
  image: ${BUILD_IMAGE}
  stage: build:package
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^\[skip-kitchen\]/
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  before_script:
    - yarn install
  script:
    - yarn build
  artifacts:
    expire_in: 1hr
    paths:
      - build

##  Docker Build  ##
.humandone:kitchen:build:docker:
  stage: build:docker
  image:
    name: ${KANIKO_EXECUTOR_IMAGE}
    entrypoint: ['']
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^\[skip-kitchen\]/
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    IS_DEV: ${IS_DEV}
    REACT_APP_ENV: ${REACT_APP_ENV}
  before_script:
    - export VAULT_ADDR=${VAULT_DEV_SERVER_URL}
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=defi-agr-front-docker jwt=$CI_JOB_JWT)"
    - vault status
    - export AWS_CREDS="$(vault kv get -field=AWS_JSON humandone/docker-dev/AWS | base64 -d)"
    - export AWS_ACCESS_KEY_ID=$(echo $AWS_CREDS | jq -r .accessKeyId)
    - export AWS_SECRET_ACCESS_KEY=$(echo $AWS_CREDS | jq -r .secretAccessKey)
  script:
    - echo "{\"credsStore\":\"ecr-login\",\"credHelpers\":{\"$AWS_ACCOUNT_ID.dkr.ecr.region.amazonaws.com\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $DOCKER_CONTEXT --dockerfile $DOCKERFILE_LOCATION
      --build-arg IS_DEV=${IS_DEV}
      --build-arg REACT_APP_ENV=${REACT_APP_ENV}
      --destination $DOCKER_IMAGE